{
    "permissions": {
        "allow": [
            // Bash commands - File operations
            "Bash(diff:*)",
            "Bash(find:*)",
            "Bash(grep:*)",
            "Bash(ls:*)",
            "Bash(mkdir:*)",
            "Bash(mv:*)",
            "Bash(rm:*)",
            "Bash(rg:*)",
            "Bash(sed:*)",
            "Bash(touch:*)",
            "Read(~/.zshrc)",
            
            // Bash commands - Git operations
            "Bash(git add:*)",
            "Bash(git checkout:*)",
            "Bash(git commit:*)",
            "Bash(git fetch:*)",
            "Bash(git pull:*)",
            "Bash(git push:*)",
            "Bash(git reset:*)",
            "Bash(git rm:*)",
            
            // Bash commands - Make operations
            "Bash(make manage:*)",
            "Bash(make npm-type-check)",
            "Bash(make ruff-format:*)",
            "Bash(make ruff-lint:*)",
            "Bash(make test:*)",
            
            // Bash commands - Other
            "Bash(gh pr view:*)",
            
            // MCP servers - Context7
            "mcp__context7__get-library-docs",
            "mcp__context7__resolve-library-id",
            
            // MCP servers - Figma
            "mcp__figma-dev-mode-mcp-server__get_code",
            "mcp__figma-dev-mode-mcp-server__get_image",
            
            // MCP servers - Linear
            "mcp__linear__create_issue",
            "mcp__linear__get_issue",
            "mcp__linear__list_issue_labels",
            "mcp__linear__list_issues",
            "mcp__linear__list_teams",
            "mcp__linear__update_issue",
            
            // MCP servers - Memory
            "mcp__memory__add_observations",
            "mcp__memory__create_entities",
            "mcp__memory__create_relations",
            "mcp__memory__delete_entities",
            "mcp__memory__delete_observations",
            "mcp__memory__open_nodes",
            "mcp__memory__read_graph",
            "mcp__memory__search_nodes",
            
            // MCP servers - Puppeteer
            "mcp__puppeteer__puppeteer_click",
            "mcp__puppeteer__puppeteer_evaluate",
            "mcp__puppeteer__puppeteer_fill",
            "mcp__puppeteer__puppeteer_navigate",
            "mcp__puppeteer__puppeteer_screenshot",
            
            // MCP servers - Sequential thinking
            "mcp__sequential-thinking__sequentialthinking",
            
            // MCP servers - Stripe
            "mcp__stripe__list_prices",
            "mcp__stripe__list_products",
            
            // MCP servers - IDE
            "mcp__ide__getDiagnostics",
            
            // WebFetch domains
            "WebFetch(domain:docs.anthropic.com)",
            "WebFetch(domain:flowbite.com)",
            "WebFetch(domain:github.com)",
            "WebFetch(domain:www.npmjs.com)",
            "WebSearch(query:*)"
        ],
        "deny": [
            "Bash(npm run build:*)",
            "Bash(npm run dev:*)",
            "Bash(npm run type-check:*)"
        ]
    },
    "enableAllProjectMcpServers": true,
    "enabledMcpjsonServers": [
        "context7",
        "puppeteer",
        "sequential-thinking"
    ],
    "hooks": {
        "PreToolUse": [
            {
                "hooks": [
                    {
                        "type": "command",
                        "command": "uv run .claude/hooks/pre_commit_hook.py"
                    }
                ]
            }
        ],
        "UserPromptSubmit": [
            {
                "hooks": [
                    {
                        "type": "command",
                        "command": "uv run .claude/hooks/task_prep_hook.py"
                    },
                    {
                        "type": "command",
                        "command": "uv run .claude/hooks/branch_manager_hook.py"
                    }
                ]
            }
        ]
    }
}
